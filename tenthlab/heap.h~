//Liza trundle
//emt8kdn
//prelab 10 huffman coding
//this code is taking from the PDR site in the lab description
//Code written by Aaron Bloomfield, 2014
// Released under a CC BY-SA license
// This code is part of the https://github.com/aaronbloomfield/pdr repository

#ifndef HEAP_H
#define HEAP_H

#include <unordered_map>
#include <vector>
#include <stdlib.h>
#include <string>
#include "heap_node.h"

using namespace std;
class heap {
public:
    heap();
    ~heap();

    void insert(heap_node* node);
    heap_node* findMin();
    heap_node* deleteMin();
    unsigned int size();
    void makeEmpty();
    bool isEmpty();
    void print();
    void huffmanTree();
  // void prefixOutput(heap_node* root, string str);
  // void prefixOutput(heap_node* root);
  //unordered_map<char , string > prefix; 

    vector<heap_node*> the_heap;
    unsigned int heap_size;

    void percolateUp(int hole);
    void percolateDown(int hole);

    
};

#endif
